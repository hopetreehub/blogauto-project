version: '3.8'

services:
  # Prometheus - 메트릭 수집 및 저장
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: blogauto-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=30d'
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - blogauto-network
    restart: unless-stopped
    environment:
      ENVIRONMENT: ${ENVIRONMENT:-development}

  # Grafana - 시각화 대시보드
  grafana:
    image: grafana/grafana:10.0.0
    container_name: blogauto-grafana
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    ports:
      - "3001:3000"
    networks:
      - blogauto-network
    restart: unless-stopped

  # Alertmanager - 알림 관리
  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: blogauto-alertmanager
    volumes:
      - ./monitoring/alertmanager:/etc/alertmanager
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    ports:
      - "9093:9093"
    networks:
      - blogauto-network
    restart: unless-stopped

  # Node Exporter - 시스템 메트릭
  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: blogauto-node-exporter
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/host:ro
    ports:
      - "9100:9100"
    networks:
      - blogauto-network
    restart: unless-stopped

  # cAdvisor - 컨테이너 메트릭
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: blogauto-cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8080:8080"
    networks:
      - blogauto-network
    restart: unless-stopped
    privileged: true

  # PostgreSQL Exporter
  postgres-exporter:
    image: wrouesnel/postgres_exporter:v0.13.2
    container_name: blogauto-postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - blogauto-network
    restart: unless-stopped
    depends_on:
      - postgres

  # Redis Exporter
  redis-exporter:
    image: oliver006/redis_exporter:v1.54.0
    container_name: blogauto-redis-exporter
    environment:
      REDIS_ADDR: "redis://redis:6379"
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
    ports:
      - "9121:9121"
    networks:
      - blogauto-network
    restart: unless-stopped
    depends_on:
      - redis

  # Loki - 로그 수집
  loki:
    image: grafana/loki:2.9.0
    container_name: blogauto-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki-config.yaml
    volumes:
      - ./monitoring/loki:/etc/loki
      - loki_data:/loki
    networks:
      - blogauto-network
    restart: unless-stopped

  # Promtail - 로그 전송
  promtail:
    image: grafana/promtail:2.9.0
    container_name: blogauto-promtail
    volumes:
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./monitoring/promtail:/etc/promtail
      - ./backend/logs:/var/log/blogauto:ro
    command: -config.file=/etc/promtail/promtail-config.yaml
    networks:
      - blogauto-network
    restart: unless-stopped
    depends_on:
      - loki

  # Jaeger - 분산 추적
  jaeger:
    image: jaegertracing/all-in-one:1.48
    container_name: blogauto-jaeger
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"
    networks:
      - blogauto-network
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:
  loki_data:

networks:
  blogauto-network:
    external: true